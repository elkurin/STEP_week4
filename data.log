stepは全て2**10
計算量は基本的に
matrix -> O(node*node*node*log(step))
normal -> O(node*edge*step)?
new_normal -> O((node+edge)*step)

下にとったデータを並べた
やはり、nodeの数が大きいとmatrixが弱い一方、edgeの数が大きいとnormalの方がきつくなる
現実だと、nodeの数が著しく大きく、nodeに対するedgeの数は小さめと考えられるので、普通のアルゴリズムでやった方が良さそう


node edge matrix normal new_normal
7 10 0.000692844 0.017179 0.074383
23 151 0.00656796 0.168738 0.407855
929 3254 264.112 4.0702 3.88261
100 10000 0.512592 9.54027 10.19
50 100 0.0158041 0.425698 1.07853
50 10000 0.103257 10.0381 9.59322
100 300 0.0681789 1.2094 0.81441
300 100000 13.6531 98.5424 93.6042
1000 1000 0.934869 3.42299 2.16065
300 3000 11.4608 3.90156 3.37101
1000 1000 1.00053 3.51123 2.59638
1000 10000 406.116 12.5338 11.4584
